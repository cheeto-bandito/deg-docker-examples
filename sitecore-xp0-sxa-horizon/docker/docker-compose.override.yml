version: "2.4"

services:
  traefik:
    command:
      - "--ping"
      - "--api.insecure=true"
      - "--providers.docker.endpoint=npipe:////./pipe/docker_engine"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.directory=C:/etc/traefik/config/dynamic"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.address=:80"
    ports:
      - "8080:80"
    volumes:
      - ./traefik:C:/etc/traefik

  mssql:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-mssql:${VERSION:-latest}
    build:
      context: ./build/mssql
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-mssql:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
        SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sxa-xp1-assets:${SXA_VERSION}
        HRZ_IMAGE: ${SITECORE_MODULE_REGISTRY}horizon-integration-xp1-assets:${HRZ_VERSION}
    volumes:
      - .\data\mssql:c:\data
    mem_limit: ${MEM_LIMIT_SQL:-2GB}
    restart: always

  # Mount our Solr data folder and use our retagged Solr image.
  solr:
    volumes:
      - .\data\solr:c:\data
    mem_limit: ${MEM_LIMIT_SOLR:-1GB}
    restart: always

  # Some modules (like SXA) also require additions to the Solr image.
  solr-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-solr-init:${VERSION:-latest}
    build:
      context: ./build/solr-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-solr-init:${SITECORE_VERSION}
        SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sxa-xp1-assets:${SXA_VERSION}

  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-cm:${VERSION:-latest}
    build:
      context: ./build/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-cm:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
        SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sxa-xp1-assets:${SXA_VERSION}
        HRZ_IMAGE: ${SITECORE_MODULE_REGISTRY}horizon-integration-xp1-assets:${HRZ_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
    environment:
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff,RobotDetectionOff
      Sitecore_Horizon_ClientHost: https://${HRZ_HOST}
    volumes:
      - .\data\cm\website:C:\deploy
      - .\data\cm\logs:C:\inetpub\wwwroot\App_Data\logs
      - ${LICENSE_PATH}:C:\license
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"
    mem_limit: ${MEM_LIMIT_CM:-4GB}
    restart: always
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https"
      - "traefik.http.routers.cm.entrypoints=web"
      - "traefik.http.routers.cm.rule=Host(`${CM_HOST}`)"
      - "traefik.http.routers.cm.middlewares=redirect-to-https"

  id:
    environment:
      Sitecore_Sitecore__IdentityServer__Clients__DefaultClient__AllowedCorsOrigins__AllowedCorsOriginsGroup2: https://${HRZ_HOST}
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
    volumes:
      - ${LICENSE_PATH}:C:\license

  xconnect:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-xconnect:${VERSION:-latest}
    build:
      context: ./build/xconnect
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-xconnect:${SITECORE_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
    environment:
      SITECORE_LICENSE_LOCATION: C:\license
    volumes:
      - .\data\xconnect:C:\deploy
      - ${LICENSE_PATH}:C:\license
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"

  xdbsearchworker:
    environment:
      SITECORE_LICENSE_LOCATION: C:\license
    volumes:
      - ${LICENSE_PATH}:C:\license

  xdbautomationworker:
    environment:
      SITECORE_LICENSE_LOCATION: C:\license
    volumes:
      - ${LICENSE_PATH}:C:\license

  cortexprocessingworker:
    environment:
      SITECORE_LICENSE_LOCATION: C:\license
    volumes:
      - ${LICENSE_PATH}:C:\license

  hrz:
    image: scr.sitecore.com/sxp/modules/sitecore-horizon:${HRZ_VERSION}
    isolation: ${ISOLATION}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz/live"]
      timeout: 300s
    volumes:
      - ${LICENSE_PATH}:C:\license
    environment:
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      Sitecore_License: ${SITECORE_LICENSE}
      Sitecore_FederatedUI__HostBaseUrl: http://hrz
      Sitecore_SitecorePlatform__ContentManagementUrl: https://${CM_HOST}
      Sitecore_SitecorePlatform__ContentManagementInternalUrl: http://cm
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__RequireHttpsMetadata: "false"
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__Authority: https://${ID_HOST}
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__CallbackAuthority: https://${HRZ_HOST}
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__InternalAuthority: http://id
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__Authority: https://${ID_HOST}
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__InternalAuthority: http://id
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__RequireHttpsMetadata: "false"
      Sitecore_Plugins__Filters__ExperienceAccelerator: +SXA
    depends_on:
      id:
        condition: service_started
      cm:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.force-STS-Header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.force-STS-Header.headers.stsSeconds=31536000"
      - "traefik.http.routers.sh-secure.entrypoints=websecure"
      - "traefik.http.routers.sh-secure.rule=Host(`${HRZ_HOST}`)"
      - "traefik.http.routers.sh-secure.tls=true"
      - "traefik.http.routers.sh-secure.middlewares=force-STS-Header"
      - "traefik.http.services.sh.loadbalancer.server.port=80"
