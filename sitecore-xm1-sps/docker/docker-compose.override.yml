version: "2.4"

services:

  traefik:
    command:
      - "--ping"
      - "--api.insecure=true"
      - "--providers.docker.endpoint=npipe:////./pipe/docker_engine"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.directory=C:/etc/traefik/config/dynamic"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.address=:80"
    ports:
      - "8080:80"
    volumes:
      - ./traefik:C:/etc/traefik

  mssql:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xm1-mssql:${VERSION:-latest}
    build:
      context: ./build/mssql
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-mssql:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
    volumes:
      - .\data\mssql:c:\data
    mem_limit: ${MEM_LIMIT_SQL:-2GB}
    restart: always
  
  solr:
    volumes:
      - .\data\solr:c:\data
    mem_limit: ${MEM_LIMIT_SOLR:-1GB}
    restart: always

  id:
    scale: 0

  cd:
    scale: 0

  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xm1-cm:${VERSION:-latest}
    build:
      context: ./build/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-cm:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
    environment: 
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff,RobotDetectionOff
      Sitecore_Publishing_Service_Url: "http://sps/"
    volumes:
      - .\data\cm\website:C:\deploy
      - .\data\cm\logs:C:\inetpub\wwwroot\App_Data\logs
      - ${LICENSE_PATH}:C:\license
    entrypoint: powershell -Command "& C:\tools\entrypoints\iis\Development.ps1"
    mem_limit: ${MEM_LIMIT_CM:-4GB}
    restart: always
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https"
      - "traefik.http.routers.cm.entrypoints=web"
      - "traefik.http.routers.cm.rule=Host(`${CM_HOST}`)"
      - "traefik.http.routers.cm.middlewares=redirect-to-https"
      
  sps-mssql-init:
    isolation: ${ISOLATION}
    image: ${SITECORE_DOCKER_REGISTRY}modules/sitecore-sps:${SPS_VERSION}
    environment:
      SITECORE_Sitecore:Publishing:ConnectionStrings:Core: Data Source=mssql;Initial Catalog=Sitecore.Core;User ID=sa;Password=${SQL_SA_PASSWORD};MultipleActiveResultSets=True
      SITECORE_Sitecore:Publishing:ConnectionStrings:Master: Data Source=mssql;Initial Catalog=Sitecore.Master;User ID=sa;Password=${SQL_SA_PASSWORD};MultipleActiveResultSets=True
      SITECORE_Sitecore:Publishing:ConnectionStrings:Web: Data Source=mssql;Initial Catalog=Sitecore.Web;User ID=sa;Password=${SQL_SA_PASSWORD};MultipleActiveResultSets=True
    command: schema upgrade --force
    depends_on:
      mssql:
        condition: service_healthy
        
  sps:
    isolation: ${ISOLATION}
    image: ${SITECORE_DOCKER_REGISTRY}modules/sitecore-sps:${SPS_VERSION}
    environment:
      ASPNETCORE_URLS: "http://*:80"
      SITECORE_Sitecore:Publishing:ConnectionStrings:Core: Data Source=mssql;Initial Catalog=Sitecore.Core;User ID=sa;Password=${SQL_SA_PASSWORD};MultipleActiveResultSets=True
      SITECORE_Sitecore:Publishing:ConnectionStrings:Master: Data Source=mssql;Initial Catalog=Sitecore.Master;User ID=sa;Password=${SQL_SA_PASSWORD};MultipleActiveResultSets=True
      SITECORE_Sitecore:Publishing:ConnectionStrings:Web: Data Source=mssql;Initial Catalog=Sitecore.Web;User ID=sa;Password=${SQL_SA_PASSWORD};MultipleActiveResultSets=True
    ports:
      - "80"
    depends_on:
      - sps-mssql-init 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz/live"]
      timeout: 300s